DESCRIPTION="Manage the /exportfs symlink"
MAINTAINER="alebli@radioavionica.ru"
VERSION="0.1"

FSPATH="${EROOT}/exportfs"
SYMLINK="exportfs"

find_targets() {
	local f
	for f in "${FSPATH}"/fs_*; do
		[[ -d ${f} ]] && basename "${f}"
	done
}

remove_symlink() {
	rm "${FSPATH}/${SYMLINK}"
}

set_symlink() {
	local target=$1

	if is_number "${target}"; then
		local targets=( $(find_targets) )
		target=${targets[target-1]}
	fi

	[[ -z ${target} || ! -d ${FSPATH}/${target} ]] \
		&& die -q "Target \"$1\" doesn't appear to be vaild!"

	ln -s "${target}" "${FSPATH}/${SYMLINK}"
}

describe_list() {
	echo "List avaible exportfs symlink targets"
}

do_list() {
	local i targets=( $(find_targets) )
	write_list_start "Available export filesystem targets:"
	for (( i = 0; i < ${#targets[@]}; i++ )); do
		[[ ${targets[i]} = \
			$(basename "$(canonicalise "${FSPATH}/${SYMLINK}")") ]] \
			&& targets[i]=$(highlight_marker "${targets[i]}")
	done

	write_numbered_list -m "(none found)" "${targets[@]}"
}

describe_set() {
	echo "Change a filesystem symlink target"
}

do_set() {
	[[ -z $1 ]] && die -q "You didn't tell me what to set the symlink to"
	[[ $# -gt 1 ]] && die -q "Too many parameters"

	if [[ -L ${FSPATH}/${SYMLINK} ]]; then 
		remove_symlink || die -q "Couldn't remove existing symlink"
		set_symlink "$1" || die -q "Couldn't set a new symlink"
	elif [[ -e ${FSPATH}/${SYMLINK} ]]; then
		die -q "${FSPATH}/${SYMLINK} exist but is not a symlink"
	else
		set_symlink "$1" || die -q "Couldn't set a new symlink"
	fi
}

describe_show() {
	echo "Show the current export filesystem"
}

do_show() {
	write_list_start "Current export filesystem"
	if [[ -L ${FSPATH}/${SYMLINK} ]]; then
		local fs=$(canonicalise "${FSPATH}/${SYMLINK}")
		write_kv_list_entry "${fs%/}" ""
	else
		write_kv_list_entry "(unset)" ""
	fi
}

